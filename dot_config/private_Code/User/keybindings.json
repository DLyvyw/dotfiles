// Place your key bindings in this file to overwrite the defaults
[
    {
        "key": "ctrl+j",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.navigateForward"
    },
    {
        "key": "ctrl+right",
        "command": "-cursorWordEndRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+left",
        "command": "-cursorWordStartLeft",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+m",
        "command": "workbench.action.maximizeEditor"
    },
    {
        "key": "ctrl+pagedown",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "ctrl+alt+q",
        "command": "workbench.action.focusNextGroup"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.terminal.killEditor",
        "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated && resourceScheme == 'vscode-terminal' || terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeGroup",
        "when": "activeEditorGroupEmpty && multipleEditorGroups"
    },
    {
        "key": "ctrl+shift+w",
        "command": "-workbench.action.closeWindow"
    },
    {
        "key": "ctrl+k ctrl+shift+w",
        "command": "-workbench.action.closeAllGroups"
    },
    {
        "key": "ctrl+k ctrl+w",
        "command": "-workbench.action.closeAllEditors"
    },
    {
        "key": "ctrl+k w",
        "command": "-workbench.action.closeEditorsInGroup"
    },
    {
        "key": "ctrl+meta+w",
        "command": "-workbench.action.toggleTabsVisibility"
    },
    {
        "key": "ctrl+w q",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+w r",
        "command": "workbench.action.reopenClosedEditor"
    },
    {
        "key": "ctrl+shift+t",
        "command": "-workbench.action.reopenClosedEditor"
    },
    {
        "key": "ctrl+h",
        "command": "-editor.action.startFindReplaceAction",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.nextEditorInGroup"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.previousEditorInGroup"
    },
    {
        "key": "ctrl+k ctrl+pageup",
        "command": "-workbench.action.previousEditorInGroup"
    },
    {
        "key": "ctrl+w",
        "command": "extension.vim_ctrl+w",
        "when": "vim.active && vim.use<C-w> && !inDebugRepl"
    },
    {
        "key": "ctrl+w",
        "command": "-extension.vim_ctrl+w",
        "when": "editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"
    },
    {
        "key": "ctrl+w m",
        "command": "workbench.action.maximizeEditor"
    },
    {
        "key": "ctrl+w ctrl+w",
        "command": "workbench.action.focusNextGroup"
    },
    {
        "key": "ctrl+w s",
        "command": "workbench.action.splitEditorToRightGroup"
    },
    {
        "key": "ctrl+w v",
        "command": "workbench.action.splitEditorToBelowGroup"
    },
    {
        "key": "ctrl+w n",
        "command": "workbench.action.toggleEditorWidths"
    },
    {
        "key": "ctrl+w e",
        "command": "workbench.view.explorer",
        "when": "viewContainer.workbench.view.explorer.enabled"
    },
    {
        "key": "ctrl+w p",
        "command": "workbench.actions.view.problems",
        "when": "workbench.panel.markers.view.active"
    },
    {
        "key": "ctrl+w o",
        "command": "workbench.action.output.toggleOutput",
        "when": "workbench.panel.output.active"
    },
    {
        "key": "ctrl+w d",
        "command": "workbench.debug.action.toggleRepl",
        "when": "workbench.panel.repl.view.active"
    },
    {
        "key": "ctrl+w t",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    }
]
